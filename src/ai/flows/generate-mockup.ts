// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A flow that generates a logo mockup based on a text prompt and uploaded logo.
 *
 * - generateMockup - A function that handles the mockup generation process.
 * - GenerateMockupInput - The input type for the generateMockup function.
 * - GenerateMockupOutput - The return type for the generateMockup function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateMockupInputSchema = z.object({
  logoDataUri: z
    .string()
    .describe(
      "A transparent logo (PNG) as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:image/png;base64,<encoded_data>'."
    ),
  prompt: z.string().describe('A text prompt describing the desired mockup scene.'),
});
export type GenerateMockupInput = z.infer<typeof GenerateMockupInputSchema>;

const GenerateMockupOutputSchema = z.object({
  mockupDataUri: z
    .string()
    .describe(
      'The generated mockup as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' // escaping the single quote inside the string
    ),
});
export type GenerateMockupOutput = z.infer<typeof GenerateMockupOutputSchema>;

export async function generateMockup(input: GenerateMockupInput): Promise<GenerateMockupOutput> {
  return generateMockupFlow(input);
}

const generateMockupFlow = ai.defineFlow(
  {
    name: 'generateMockupFlow',
    inputSchema: GenerateMockupInputSchema,
    outputSchema: GenerateMockupOutputSchema,
  },
  async input => {
    const {media} = await ai.generate({
      // IMPORTANT: ONLY the googleai/gemini-2.0-flash-preview-image-generation model is able to generate images. You MUST use exactly this model to generate images.
      model: 'googleai/gemini-2.0-flash-preview-image-generation',

      prompt: [
        {media: {url: input.logoDataUri}},
        {text: `Take the provided logo and place it in a realistic mockup based on the following scene description.

Scene description: ${input.prompt}

VERY IMPORTANT: The provided logo might be white or a very light color. Pay close attention to the logo image and ensure it is clearly visible and accurately represented in the final mockup, even if the scene description suggests a light-colored background. Do not lose the logo.`},
      ],

      config: {
        responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
      },
    });
    return {mockupDataUri: media.url!};
  }
);
